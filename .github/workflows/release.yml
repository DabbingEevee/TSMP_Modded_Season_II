name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'example: "v1.2", "v0.3 alpha"'     
        required: true
      releaseName:
        description: 'name of the release'  
        required: true

jobs:
  release:
    name: Release Modpack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Zip project # This would actually build your project, using zip for an example artifact
        run: |
          dotnet fsi ./modules/Package.fsx
      - name: Collate mod changes
        run : | 
          dotnet fsi ./modules/ModChangeCollator.fsx  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.releaseName }}
          body_path: ./changelog.md
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./modpack.zip
          asset_name: modpack.zip
          asset_content_type: application/zip